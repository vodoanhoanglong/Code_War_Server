type Mutation {
  changeAccountPassword(data: ChangeAccountPasswordInput!): MessageOutput
}

type Mutation {
  createAccount(data: CreateAccountInput!): CreateAccountOutput
}

type Mutation {
  forgotPassword(data: Input!): Output!
}

type Mutation {
  login(data: LoginInput!): AccessTokenOutput!
}

type Mutation {
  refreshToken(data: RefreshTokenInput!): AccessTokenOutput!
}

input ChangeUserPasswordInput {
  user_id: String!
  new_password: String!
}

input CreateAccountInput {
  email: String
  full_name: String
  password: String
  role: String
}

input ChangeAccountPasswordInput {
  account_id: String!
  new_password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input ChangePasswordInput {
  current_password: String!
  new_password: String!
}

input RefreshTokenInput {
  access_token: String!
  refresh_token: String!
  auth_provider_type: String
}

input Input {
  email: String!
}

input RevokeTokenInput {
  access_token: String!
  refresh_token: String!
  auth_provider_type: String
}

type MessageOutput {
  message: String!
  id: String!
  password: String!
}

type AffectedRowsOutput {
  affected_rows: Int
}

type CreateAccountOutput {
  id: String
  email: String
  full_name: String
  access_token: String
}

type AccessTokenOutput {
  access_token: String!
  token_type: String!
  expires_in: Int!
  refresh_token: String
  scope: String
}

type Results {
  page: Int!
  size: Int!
  userList: json!
}

type Output {
  email: String!
  token: String!
  message: String!
  id: String!
}

type RevokeTokenOutput {
  access_token: String!
  token_type: String!
  expires_in: Int!
  refresh_token: String
  scope: String
}
